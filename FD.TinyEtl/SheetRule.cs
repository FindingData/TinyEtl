///////////////////////////////////////////////////////////
//  SheetRule.cs
//  Implementation of the Class SheetRule
//  Generated by Enterprise Architect
//  Created on:      18-4月-2018 15:36:19
//  Original author: drago
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;



namespace Rules {
	public class SheetRule {
		public string SheetName{ get;  set;} 
		public int SheetIndex{ get;  set;} 
		public string FkSheetName{ get;  set;} 
		public IList<ColumnRule> ColumnRules{ get;  set;}
        public int ColumnNum
        {
            get
            {
                return ColumnRules?.Count() ?? 0;
            }
        }

        public ColumnRule this[int index]
        {
            get
            {
                return ColumnRules?[index];
            }
        }

        public ColumnRule this[string name]
        {
            get
            {                
                return ColumnRules?.FirstOrDefault(f => name.Equals(f.ColumnName));
            }
        }

        public List<string> PKColumnNameList
        {
            get
            {
                return ColumnRules.Where(f => f.IsPk).Select(f => f.ColumnName).ToList();
            }
        }

        /// <summary>
        /// 返回建值对《key：外键ColumnName,Value：父Sheet中对应列名》
        /// </summary>
        /// <returns></returns>
        public Dictionary<string, string> FKColumnNameList
        {
            get
            {
                return ColumnRules.Where(f => f.IsFk).ToDictionary(k => k.ColumnName, v => v.FKColumnName);
            }
        }


    }//end SheetRule

}//end namespace Rules